# Deployment Troubleshooting Guide

## üöÄ Quick Start Commands

```bash
# 1. Deploy the application
./deploy.sh

# 2. Start with PM2
./start_pm2.sh

# 3. Check status
pm2 list
pm2 logs automobile-safety-api

# 4. Test the API
curl http://localhost:8000/api/health
```

## üîç Common Issues & Solutions

### Issue 1: Environment Variables Not Loading
**Error:** `ValueError: MONGO_URL environment variable is required`

**Solution:**
```bash
# Method A: Export variables before starting
export MONGO_URL="mongodb://yelmosatheesh:Reset%40123@93.127.134.137:27017?authSource=admin"
pm2 restart automobile-safety-api

# Method B: Use the updated ecosystem.config.js (already fixed in latest version)
pm2 restart automobile-safety-api

# Method C: Check .env file exists and is readable
cat .env
ls -la .env
```

### Issue 2: PM2 Process Keeps Restarting
**Check logs:**
```bash
pm2 logs automobile-safety-api --lines 30
```

**Common causes:**
- Port already in use: `sudo lsof -i :8000`
- MongoDB connection issues
- Missing dependencies: `pip install -r requirements.txt`

### Issue 3: MongoDB Connection Failed
**Test connection manually:**
```bash
python3 -c "
import asyncio
from app.config.database import connect_to_mongo
asyncio.run(connect_to_mongo())
"
```

**Solutions:**
- Check if MongoDB server is running
- Verify connection string in .env
- Check firewall settings

### Issue 4: Permission Denied
```bash
chmod +x deploy.sh
chmod +x start_pm2.sh
chmod 755 uploads
chmod 755 logs
```

### Issue 5: Virtual Environment Issues
```bash
# Remove and recreate venv
rm -rf venv
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
```

## üìä Monitoring Commands

```bash
# List all PM2 processes
pm2 list

# Monitor in real-time
pm2 monit

# View logs
pm2 logs automobile-safety-api

# Restart application
pm2 restart automobile-safety-api

# Stop application
pm2 stop automobile-safety-api

# Delete application
pm2 delete automobile-safety-api

# Save PM2 configuration
pm2 save

# Setup auto-start on boot
pm2 startup
```

## üîó Testing Endpoints

```bash
# Health check
curl http://localhost:8000/api/health

# Root endpoint
curl http://localhost:8000/

# API documentation
curl http://localhost:8000/docs

# OpenAPI schema
curl http://localhost:8000/openapi.json
```

## üõ†Ô∏è Manual Testing

```bash
# Test application manually
cd /home/test/testapp
source venv/bin/activate
python main.py
```

## üì± Useful URLs

- **API Health:** http://localhost:8000/api/health
- **API Docs:** http://localhost:8000/docs
- **Root:** http://localhost:8000/
- **Uploads:** http://localhost:8000/uploads/

## üîß Environment Variables Reference

Required environment variables (set in ecosystem.config.js):
- `MONGO_URL` - MongoDB connection string
- `DATABASE_NAME` - Database name (default: autosafety)
- `SECRET_KEY` - JWT secret key
- `ALGORITHM` - JWT algorithm (default: HS256)
- `ACCESS_TOKEN_EXPIRE_MINUTES` - Token expiration time
- `UPLOAD_DIR` - Upload directory (default: uploads)
- `MAX_FILE_SIZE` - Max file size in bytes

## üÜò Emergency Recovery

If everything fails:
```bash
# 1. Stop all PM2 processes
pm2 delete all

# 2. Clean up
rm -rf venv
rm -rf __pycache__
rm -rf app/__pycache__

# 3. Redeploy
./deploy.sh
./start_pm2.sh
```
