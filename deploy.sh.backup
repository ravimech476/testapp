#!/bin/bash

# Automobile Safety Management System - Ubuntu Deployment Script
echo "🚀 Starting deployment of Automobile Safety Management System..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if Python 3 is installed
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}❌ Python 3 is not installed!${NC}"
    exit 1
fi

# Create virtual environment
echo -e "${YELLOW}📦 Creating virtual environment...${NC}"
python3 -m venv venv
source venv/bin/activate

# Upgrade pip
echo -e "${YELLOW}⬆️ Upgrading pip...${NC}"
pip install --upgrade pip

# Install dependencies
echo -e "${YELLOW}📥 Installing dependencies...${NC}"
pip install -r requirements.txt

# Install python-dotenv if not in requirements
pip install python-dotenv

# Create necessary directories
echo -e "${YELLOW}📁 Creating directories...${NC}"
mkdir -p uploads logs

# Set permissions
chmod 755 uploads
chmod 755 logs

# Check if .env file exists
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}⚠️ Creating .env file...${NC}"
    cat > .env << EOF
# Database Configuration
MONGO_URL=mongodb://yelmosatheesh:Reset%40123@93.127.134.137:27017?authSource=admin
DATABASE_NAME=autosafety

# Security
SECRET_KEY=automobile-safety-2024-super-secret-key-change-in-production-environment
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# File Upload
UPLOAD_DIR=uploads
MAX_FILE_SIZE=5242880

# Application Settings
ENVIRONMENT=production
DEBUG=False
EOF
fi

# Test the application
echo -e "${YELLOW}🧪 Testing application...${NC}"
python -c "
try:
    from main import app
    print('✅ Application imports successful')
except Exception as e:
    print(f'❌ Application import failed: {e}')
    exit(1)
"

# Test MongoDB connection
echo -e "${YELLOW}🔗 Testing MongoDB connection...${NC}"
python -c "
import asyncio
import os
from dotenv import load_dotenv
load_dotenv()

async def test_mongo():
    try:
        from app.config.database import connect_to_mongo
        await connect_to_mongo()
        print('✅ MongoDB connection successful')
    except Exception as e:
        print(f'⚠️ MongoDB connection failed: {e}')
        print('Application will still start but database features may not work')

asyncio.run(test_mongo())
"

# Install Node.js and PM2 if not exists
if ! command -v node &> /dev/null; then
    echo -e "${YELLOW}📦 Installing Node.js...${NC}"
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt-get install -y nodejs
fi

# Install PM2 if not exists
if ! command -v pm2 &> /dev/null; then
    echo -e "${YELLOW}📦 Installing PM2...${NC}"
    npm install -g pm2
fi

# Make start script executable
chmod +x start_pm2.sh

echo -e "${GREEN}✅ Setup complete! Ready to deploy with PM2${NC}"
echo -e "${BLUE}📋 Next steps:${NC}"
echo -e "   ${GREEN}1.${NC} Run: ${YELLOW}./start_pm2.sh${NC}"
echo -e "   ${GREEN}2.${NC} Check: ${YELLOW}pm2 list${NC}"
echo -e "   ${GREEN}3.${NC} Save: ${YELLOW}pm2 save && pm2 startup${NC}"
echo -e "   ${GREEN}4.${NC} Test: ${YELLOW}curl http://localhost:8000/api/health${NC}"
